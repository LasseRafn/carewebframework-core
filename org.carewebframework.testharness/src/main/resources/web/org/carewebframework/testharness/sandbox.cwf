<page xmlns:w="client">
	<borderlayout height="100%" width="100%" class="cwf-sandbox"
		controller="${cwfSandboxController}">
		<west size="50%" splittable="true" collapsible="true">
			<panel mold="bootstrap" vflex="1">
		        <caption hflex="1" >
		          <label zclass="z-caption-content"
		                 value="${@msg.cwf.sandbox.title.left}" />
		          <space hflex="10" />
		          <combobox name="cboZul" readonly="true" width="200px" 
		                    placeholder="${@msg.cwf.sandbox.combobox.placeholder}"/>
		          <space hflex="10" />
		          <button name="btnFormatContent" zclass="btn btn-xs btn-info"
		                  w:onClick="this.$f('txtContent').format();"
		                  label="${@msg.cwf.sandbox.btn.format.label}" />
		          <space hflex="10" />
		          <button name="btnClearContent" zclass="btn btn-xs btn-danger"
		                  w:onClick="this.$f('txtContent').clear();"
		                  label="${@msg.cwf.btn.clear.label}" />
		          <space hflex="1" />
		          <button name="btnRenderContent"
		                  onClick="txtContent.focus();"
		                  zclass="btn btn-xs btn-success" label="${@msg.cwf.btn.view.label}" />
		        </caption>
				<panelchildren style="padding:0">
					<textbox name="txtContent" multiline="true" />
					<script type="text/javascript" defer="true">
						<![CDATA[
						var txtContent = this.$f('txtContent');
						var cm = CodeMirror.fromTextArea(txtContent.$n(), {
							lineNumbers: true,
							mode: 'xml',
							placeholder: '${@msg.cwf.sandbox.textbox.placeholder}',
							autoCloseTags: true,
							matchTags: {bothTags: true},
							extraKeys: {
								'Alt-F': function() {txtContent.format()},
								'Alt-J': 'toMatchingTag'
							}
						});
						txtContent.format = function() {
						    var from = cm.getCursor('from');
						    var to = cm.getCursor('to');
						    
						    if (from.line == to.line && from.ch == to.ch) {
						    	from.line = 0;
						    	to.line = cm.lastLine();
						    }
						        
				    		cm.operation(function() {
		        				for (var i = from.line; i <= to.line; i++) {
									cm.indentLine(i);
							    }
							});
				    		
				    		from.ch = 0;
				    		cm.setSelection(from, from);
				    		cm.focus();
						};
						txtContent.resync = function() {
						 	cm.setValue(txtContent.getValue());   
						};
						txtContent.focus = function() {
							cm.focus();    
						};
						txtContent.clear = function() {
						    cm.setValue('');
						    cm.focus();
						};
						cm.on('changes', function() {
						    txtContent.setValue(cm.getValue());
						    txtContent.fireOnChange({toServer: true}); 
						});
						cm.setSize('100%', '100%');
						setTimeout(function() {
						    cm.refresh();
						}, 1);
						]]>
					</script>
				</panelchildren>
			</panel>
		</west>
		<center>
			<panel mold="bootstrap" vflex="1">
		        <caption hflex="1">
		          <button name="btnClearView" zclass="btn btn-xs btn-danger"
		                  onClick="txtContent.focus();"
		                  label="${@msg.cwf.btn.clear.label}" />
		          <space hflex="1" />
		          <button name="btnRefreshView" zclass="btn btn-xs btn-success"
		                  label="${@msg.cwf.btn.refresh.label}" />
		          <space hflex="10" />
		          <label zclass="z-caption-content" style="float:right"
		                 value="${@msg.cwf.sandbox.title.right}" />
		        </caption>
				<panelchildren name="contentParent" style="padding:0">
					<idspace vflex="1" width="100%"
						style="overflow:auto" />
				</panelchildren>
			</panel>
		</center>
	</borderlayout>
	<style>
		.cwf-sandbox .CodeMirror-empty {
			opacity: .5;
		}
		
		.cwf-sandbox .CodeMirror-matchingtag {
  			background: rgba(255, 250, 0, .3); 
  			text-decoration: underline;
		}
	</style>
</page>